name: CI Pipeline

# Concurrency control - cancel previous runs when new commits are pushed
# This saves CI minutes by ensuring only the latest commit is tested
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
      - '.vscode/**'
      - '.scripts/README.md'
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
      - '.vscode/**'
      - '.scripts/README.md'

jobs:
  build-and-test:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: linux
            runner: [self-hosted, Linux]
          - os: macos
            runner: [self-hosted, macOS]
          - os: windows
            runner: [self-hosted, Windows]
    timeout-minutes: 40
    defaults:
      run:
        shell: bash
    steps:
      - name: Runner info
        run: |
          echo "RUNNER_NAME=$RUNNER_NAME"
          echo "RUNNER_OS=$RUNNER_OS"
          echo "RUNNER_LABELS=$RUNNER_LABELS"
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio
      - name: Install ESP32 platform
        run: |
          pio platform install espressif32
      - name: Run Native Tests
        run: |
          echo "Running native environment tests on ${{ matrix.os }}..."
          pio test -e native --verbose
      - name: Build ESP32 Firmware
        run: |
          echo "Building ESP32 firmware on ${{ matrix.os }}..."
          pio run -e esp32dev --verbose
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: esp32-firmware-${{ matrix.os }}
          path: .pio/build/esp32dev/
      - name: Cleanup workspace (self-hosted)
        if: always()
        run: |
          if echo "$RUNNER_LABELS" | grep -qi 'self-hosted'; then
            rm -rf .pio .pytest_cache .cache ~/.platformio build .pioenvs || true
          fi